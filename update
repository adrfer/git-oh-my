#!/usr/bin/env bash

# Check if git is available
if ! command -v 'git' >/dev/null; then
  echo 'Ooops, git not found.'
  exit 1
fi

# Define repository variables
local_repo="${HOME}/.git-oh-my"
remote_repo='https://github.com/adrfer/git-oh-my.git'

# Save git credentials, if any
name="$(git config user.name)"
email="$(git config user.email)"

# Update existing files or download new ones
if [[ -d "${local_repo}" ]]; then
  cd "${local_repo}"
  echo -n 'Updating some quick and dirty git files...'
  
  if git checkout . && git pull origin master >/dev/null 2>&1; then
    cd - >/dev/null
    echo ' done.'
  else
    echo
    echo "Ooops, unable to access ${remote_repo}, try again."
    exit 1
  fi
else
  echo -n 'Downloading some quick and dirty git files...'

  if git clone "${remote_repo}" "${local_repo}" >/dev/null 2>&1; then
    echo ' done.'
  else
    echo
    echo "Ooops, unable to access ${remote_repo}, try again."
    exit 1
  fi
fi

ln -sf "${local_repo}/gitconfig" "${HOME}/.gitconfig"
ln -sf "${local_repo}}/gitignore" "${HOME}/.gitignore"
ln -sf "${local_repo}}/gitmessage "${HOME}/.gitmessage"

# Setup git credentials
echo 'Now, setting up your credentials...'

name_prompt='Your name: '

if [[ -n "${name}" ]]; then
  echo -n "Last configured name is ${name}. "
  read -r -p 'Keep it (y/n [n])? '

  if [[ ! "${REPLY}" =~ ^[Yy]$ ]]; then
    read -r -p "${name_prompt}" name
  fi
else
  read -r -p "${name_prompt}" name
fi

git config --global user.name "${name}"

email_prompt='Your email: '

if [[ -n "${email}" ]]; then
  echo -n "Last configured email is ${email}. "
  read -r -p 'Keep it (y/n [n])? '

  if [[ ! "${REPLY}" =~ ^[Yy]$ ]]; then
    read -r -p "${email_prompt}" email
  fi
else
  read -r -p "${email_prompt}" email
fi

git config --global user.email "${email}"

echo 'All good, enjoy!'
exit 0
