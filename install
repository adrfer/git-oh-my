#!/usr/bin/env bash

# Check if git is available
if ! command -v 'git' >/dev/null 2>&1; then
  echo 'Ooops, git not found. '
  echo 'Go to https://git-scm.com for more info.'
  exit 1
fi

# Define repository variables
local_repo="${HOME}/.git-oh-my"
remote_repo='https://github.com/adrfer/git-oh-my.git'

# Save credentials, if any
name="$(git config user.name)"
email="$(git config user.email)"

# Backup local files, if any
if [[ -d "${local_repo}" ]]; then
  echo -n "Backing up ${local_repo}..."
  mv -f "${local_repo%/}"{," copy $(date +%s)"}
  echo ' done.'
fi

# Download remote files
echo -n "Downloading some quick and dirty git files..."

if git clone --quiet "${remote_repo}" "${local_repo}" >/dev/null 2>&1; then
  echo ' done.'
else
  echo
  echo 'Ooops, there was an error, try again.'
  exit 1
fi

# Setup local files
remote_gitconfig="${local_repo}/gitconfig"
remote_gitignore="${local_repo}/gitignore"
local_gitconfig="${HOME}/.gitconfig"
local_gitignore="${HOME}/.gitignore"

ln -sf "${remote_gitconfig}" "${local_gitconfig}"
ln -sf "${remote_gitignore}" "${local_gitignore}"

# Setup credentials
echo 'Now, setting up your credentials...'

name_prompt='Your name: '

if [[ -n "${name}" ]]; then
  echo -n "Last configured name is ${name}. "
  read -r -p 'Keep it (y/n [n])? '

  if [[ ! "${REPLY}" =~ ^[Yy]$ ]]; then
    read -r -p "${name_prompt}" name
  fi
else
  read -r -p "${name_prompt}" name
fi

git config --global user.name "${name}"

email_prompt='Your email: '

if [[ -n "${email}" ]]; then
  echo -n "Last configured email is ${email}. "
  read -r -p 'Keep it (y/n [n])? '

  if [[ ! "${REPLY}" =~ ^[Yy]$ ]]; then
    read -r -p "${email_prompt}" email
  fi
else
  read -r -p "${email_prompt}" email
fi

git config --global user.email "${email}"

echo 'All good, enjoy!'
exit 0
