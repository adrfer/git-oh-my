# For more info about `git-config`, open a terminal and run this command:
#
#   man git-config
#
# Or check git-scm.com/docs/git-config.

[user]
  name =
  email =

[alias]

  # add/remove files to/from next commit
  stage = add #<file or dir>
  unstage = reset HEAD -- #<file>

  # discard changes in working directory
  discard-modified-but-not-staged = checkout -- #<file>

  # change an existing file path and stage the move
  rename-and-stage = mv #<old file> <new file>

  # delete the file and stage the removal for commit
  delete-and-stage = rm #<file>

  # diff changes of what is staged and unstaged
  show-modified-but-not-staged = diff
  show-staged-but-not-commited = diff --staged

  # commit staged content as a new commit
  commit-staged = commit --message #<message>
  commit-modified-and-staged = commit --all --message #<message>
  commit-modified-staged-and-removed = add --all && commit-modified-and-staged #<message>
  commit-by-ammending-last-commit-message = commit --amend

  # list and delete local and remote branches
  show-branches = branch --all
  delete-local-branch = branch --delete #<branch>
  delete-remote-branch = push origin --delete #<branch>
  delete-obsolete-local-remote-tracking-branches = fetch origin --prune

  # show the commit history for the currently active branch
  log-last-commit = log -1
  log-contributors = shortlog --summary --numbered
  log-pretty = log --pretty=format:'%C(auto)%h %C(reset)%s %C(blue)(%cr) %C(red)<%an>'
  log-commits-that-modified-file = log --oneline --follow #<file>

  # list all defined remotes
  show-remotes = remote --verbose

  # list all created tags
  show-tags = tag --list

  # list all defined aliases
  show-aliases = config --get-regexp '^alias\\.'

[color]
  ui = auto

[core]
  pager = less
  editor = vim
  whitespace = space-before-tab, trailing-space

  # prevent CRLFs from getting written into the repository by converting them to LF
  autocrlf = input
  excludesfile = ~/.gitignore

[push]
  default = simple

[help]
  autocorrect = 1