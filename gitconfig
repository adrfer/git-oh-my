# For more info about `git-config`, open a terminal and run this command:
#
#   man git-config
#
# Or check git-scm.com/docs/git-config.

[user]
  name =
  email =
[alias]
  bl = blame
  br = branch
  branches = branch --all
  delete-local-branch = branch --delete
  delete-remote-branch = push origin --delete
  delete-local-remote-tracking-branch = branch --delete --remotes

  # commit staged content as a new commit snapshot
  ci = commit
  commit-staged-and-modified = commit --all --message
  commit-all = add --all && commit-staged-and-modified
  commit-by-ammending-last-commit-message = commit --amend

  # switch to another branch and check it out into working directory
  co = checkout
  discard-changes = checkout --
  cl = clone
  ll = pull
  sh = push

  # show modified files in working directory, staged for next commit
  st = status

  # add a file as it looks now to next commit
  stage = add
  unstage = reset HEAD --
  log-last = log -1
  contributors = shortlog --summary --numbered
  pretty-log = log --pretty=format:'%C(auto)%h %C(reset)%s %C(blue)(%cr) %C(red)<%an>'
  remotes = remote --verbose
  tags = tag --list
  aliases = config --get-regexp '^alias\\.'

  # diff of what is changed but not staged
  show-staged-changes = diff

  # diff of what is staged but not yet committed
  show-unstaged-changes = diff --staged

  visual = !gitk
[color]
  ui = auto
[core]
  pager = less
  editor = vim
  whitespace = space-before-tab, trailing-space
  autocrlf = input
  excludesfile = ~/.gitignore
[push]
  default = simple
[help]
  autocorrect = 1